'scopeName': 'text.html.ee'
'fileTypes': []
'name': 'ExpressionEngine'
'patterns': [
  {
    'include': '#core-tag'
  }
  {
    'include': '#components'
  }
  {
    'include': 'text.html.php'
  }
]
'repository': {
  'core-tag': {
        'begin': '({\/*exp:)(\\w*)(:)(\\w*)?'
        'beginCaptures': {
          '1':
            'name': 'keyword.ee.core'
          '2':
            'name': 'keyword.ee.module'
          '3':
            'name': 'keyword.ee.core'
          '4':
            'name': 'keyword.ee.method'
        }
        'end': '(}(?!"))'
        'endCaptures': {
          '1':
            'name': 'keyword.ee.core'
        }
        'patterns': [
            {
                'include': '#components'
            }
            {
                'include': '#double-quote'
            }
            {
                'include': '#single-quote'
            }
            {
                'match': '\\w+'
                'name': 'variable.parameter.ee'
            }
        ]
  }
  'components': {
    'patterns': [
      {
        'include': '#comment'
      }
      {
        'include': '#conditional'
      }
      {
        'include': '#variable'
      }
      {
        'include': '#variable-pair'
      }
    ]
  }
  'comment': {
    'begin': '\\{!--'
    'end': '--\\}'
    'name': 'comment.block.ee'
  }
  'conditional': {
    'patterns': [
      {
        'begin': '({)(if)(:)?(else)?',
        'beginCaptures': {
          '1':
            'name': 'keyword.ee.core'
          '2':
            'name': 'keyword.ee.control'
          '3':
            'name': 'keyword.ee.core'
          '4':
            'name': 'keyword.ee.method'
        }
        'end': '(})'
        'endCaptures': {
          '1':
            'name': 'keyword.ee.core'
        }
        'patterns': [
          {
            'include': '#double-quote'
          }
          {
            'include': '#single-quote'
          }
          {
            'include': '#components'
          }
          {
            'match': '[!=><]'
            'name': 'keyword.ee.operator'
          }
          {
            'match': '\\w+'
            'name': 'variable.ee'
          }
        ]
      }
      {
        'match': '({\/)(if)(})',
        'captures': {
          '1':
            'name': 'keyword.ee.core'
          '2':
            'name': 'keyword.ee.control'
          '3':
            'name': 'keyword.ee.core'
        }
      }
    ]
  }
  'variable': {
    'match': '({)([\\w:]+)(})',
    'captures': {
      '1':
        'name': 'keyword.ee.core'
      '2':
        'name': 'variable.other.ee'
      '3':
        'name': 'keyword.ee.core'
    }
  }
  'variable-pair': {
    'begin': '({\/*(?!exp))(\\w*)'
    'beginCaptures': {
      '1':
        'name': 'keyword.ee.core'
      '2':
        'name': 'variable.other.ee'
    }
    'end': '(}(?!"))'
    'endCaptures': {
      '1':
        'name': 'keyword.ee.core'
    }
    'patterns': [
        {
            'include': '#components'
        }
        {
            'include': '#double-quote'
        }
        {
            'include': '#single-quote'
        }
        {
            'match': '\\w+'
            'name': 'variable.parameter.ee'
        }
    ]
  }
  'single-quote': {
    'begin': '\'(.*?)'
    'end': '\''
    'patterns': [
      {
        'include': '#components'
      }
      {
        'match': '\\w+'
        'name': 'string.ee.quoted.single'
      }
    ]
  }
  'double-quote': {
    'begin': '\"(.*?)'
    'end': '\"'
    'patterns': [
      {
        'include': '#components'
      }
      {
        'match': '\\w+'
        'name': 'string.ee.quoted.double'
      }
    ]
  }
  
}
